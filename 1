using System;

public static class InputValidator
{
    public static int ReadInt(string prompt)
    {
        int value;
        Console.Write(prompt);
        while (!int.TryParse(Console.ReadLine(), out value))
        {
            Console.WriteLine("Ошибка ввода! Пожалуйста, введите целое число.");
            Console.Write(prompt);
        }
        return value;
    }
}

public class ThreeNumbers
{
    protected int _number1;
    protected int _number2;
    protected int _number3;

    public ThreeNumbers()
    {
        _number1 = 0;
        _number2 = 0;
        _number3 = 0;
    }

    public ThreeNumbers(int num1, int num2, int num3)
    {
        _number1 = num1;
        _number2 = num2;
        _number3 = num3;
    }

    public ThreeNumbers(ThreeNumbers source)
    {
        _number1 = source._number1;
        _number2 = source._number2;
        _number3 = source._number3;
    }

    public virtual int FindMin()
    {
        return Math.Min(_number1, Math.Min(_number2, _number3));
    }

    public override string ToString()
    {
        return $"Числа: {_number1}, {_number2}, {_number3}";
    }
}

public class Point3D : ThreeNumbers
{
    public Point3D() : base() { }
    public Point3D(int x, int y, int z) : base(x, y, z) { }
    public Point3D(Point3D source) : base(source) { }

    public int X { get => _number1; set => _number1 = value; }
    public int Y { get => _number2; set => _number2 = value; }
    public int Z { get => _number3; set => _number3 = value; }

    public double DistanceToOrigin()
    {
        return Math.Sqrt(X * X + Y * Y + Z * Z);
    }

    public bool IsInFirstOctant()
    {
        return X > 0 && Y > 0 && Z > 0;
    }

    public override string ToString()
    {
        return $"Точка 3D: X={X}, Y={Y}, Z={Z}";
    }
}

class Program
{
    static void Main()
    {
        Console.WriteLine("=== Тестирование базового класса ThreeNumbers ===");

        int num1 = InputValidator.ReadInt("Введите первое число: ");
        int num2 = InputValidator.ReadInt("Введите второе число: ");
        int num3 = InputValidator.ReadInt("Введите третье число: ");

        ThreeNumbers numbers1 = new ThreeNumbers(num1, num2, num3);
        ThreeNumbers numbers2 = new ThreeNumbers(numbers1);

        Console.WriteLine("\nРезультаты для базового класса:");
        Console.WriteLine(numbers1);
        Console.WriteLine($"Минимальное число: {numbers1.FindMin()}");
        Console.WriteLine($"Копия: {numbers2}");

        Console.WriteLine("\n=== Тестирование дочернего класса Point3D ===");

        int x = InputValidator.ReadInt("Введите координату X: ");
        int y = InputValidator.ReadInt("Введите координату Y: ");
        int z = InputValidator.ReadInt("Введите координату Z: ");

        Point3D point1 = new Point3D(x, y, z);
        Point3D point2 = new Point3D(point1);

        Console.WriteLine("\nРезультаты для дочернего класса:");
        Console.WriteLine(point1);
        Console.WriteLine($"Расстояние до начала координат: {point1.DistanceToOrigin():F2}");
        Console.WriteLine($"Находится в первом октанте: {point1.IsInFirstOctant()}");
        Console.WriteLine($"Копия точки: {point2}");

        Console.WriteLine("\nНажмите любую клавишу для выхода...");
        Console.ReadKey();
    }
}
